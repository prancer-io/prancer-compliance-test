package rule

# https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment
#
# PR-AZR-TRF-SQL-023
#

default sql_db_ads_mail = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["sql_db_ads_mail"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_mail"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_attribute_absence["sql_db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    recurring_scans := resource.properties.recurring_scans[_]
    not recurring_scans.emails
}

azure_issue["sql_db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_sql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              count(ri.properties.recurring_scans[_].emails) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              count(r.properties.recurring_scans[_].emails) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["sql_db_ads_mail"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     count(recurring_scans.emails) == 0
# }

sql_db_ads_mail {
    lower(input.resources[_].type) == "azurerm_sql_server"
    not azure_attribute_absence["sql_db_ads_mail"]
    not azure_issue["sql_db_ads_mail"]
}

sql_db_ads_mail = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_mail"]
}

sql_db_ads_mail = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_mail"]
} 

sql_db_ads_mail_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.emails' need to be exist with recipient email addresses. Its missing from the resource." {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_mail"]
} else = "Azure SQL Server advanced data security currently does not have any email alert recipient to get scan notification" {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_mail"]
}

sql_db_ads_mail_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-023",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should have email alert recipient to get scan notification",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that do not have an email address configured for ADS alert notifications. As a best practice, provide one or more email addresses where you want to receive alerts for any anomalous activities detected on SQL Servers.",
    "Resource Type": "azurerm_sql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}


# https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/2017-03-01-preview/servers/databases/vulnerabilityassessments
# https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment
#
# PR-AZR-TRF-SQL-024
#

default db_ads_mail = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["db_ads_mail"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["db_ads_mail"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_attribute_absence["db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    recurring_scans := resource.properties.recurring_scans[_]
    not recurring_scans.emails
}

azure_issue["db_ads_mail"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              count(ri.properties.recurring_scans[_].emails) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              count(r.properties.recurring_scans[_].emails) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["db_ads_mail"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     count(recurring_scans.emails) == 0
# }

db_ads_mail {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    not azure_attribute_absence["db_ads_mail"]
    not azure_issue["db_ads_mail"]
}

db_ads_mail = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_mail"]
}

db_ads_mail = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_mail"]
} 

db_ads_mail_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.emails' need to be exist with recipient email addresses. Its missing from the resource." {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_mail"]
} else = "Azure SQL Server advanced data security currently does not have any email alert recipient to get scan notification" {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_mail"]
}

db_ads_mail_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-024",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should have email alert recipient to get scan notification",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that do not have an email address configured for ADS alert notifications. As a best practice, provide one or more email addresses where you want to receive alerts for any anomalous activities detected on SQL Servers.",
    "Resource Type": "azurerm_mssql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}

#
# PR-AZR-TRF-SQL-025
#

default sql_db_ads_alert = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.

azure_attribute_absence["sql_db_ads_alert"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_alert"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_attribute_absence["sql_db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    recurring_scans := resource.properties.recurring_scans[_]
    not recurring_scans.email_subscription_admins
}

azure_issue["sql_db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_sql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              ri.properties.recurring_scans[_].email_subscription_admins == true;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              ri.properties.recurring_scans[_].email_subscription_admins == true;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["sql_db_ads_alert"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     recurring_scans.email_subscription_admins != true
# }

sql_db_ads_alert {
    lower(input.resources[_].type) == "azurerm_sql_server"
    not azure_attribute_absence["sql_db_ads_alert"]
    not azure_issue["sql_db_ads_alert"]
}

sql_db_ads_alert = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_alert"]
}

sql_db_ads_alert = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_alert"]
} 

sql_db_ads_alert_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.email_subscription_admins' need to be exist. Its missing from the resource. Please set the value to 'true' after property addition." {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_alert"]
} else = "Sending Alert to the to subscription administrators is currently not enabled in Azure SQL Server advanced data security" {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_alert"]
}

sql_db_ads_alert_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-025",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should send alerts to subscription administrators",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that are not enabled with ADS. As a best practice, enable ADS so that the administratorsâ€”service and co-administratorâ€”can receive email alerts when anomalous activities are detected on the SQL Servers.",
    "Resource Type": "azurerm_sql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}


#
# PR-AZR-TRF-SQL-026
#

default db_ads_alert = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.

azure_attribute_absence["db_ads_alert"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["db_ads_alert"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_attribute_absence["db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    recurring_scans := resource.properties.recurring_scans[_]
    not recurring_scans.email_subscription_admins
}

azure_issue["db_ads_alert"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              ri.properties.recurring_scans[_].email_subscription_admins == true;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              ri.properties.recurring_scans[_].email_subscription_admins == true;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["db_ads_alert"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     recurring_scans.email_subscription_admins != true
# }

db_ads_alert {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    not azure_attribute_absence["db_ads_alert"]
    not azure_issue["db_ads_alert"]
}

db_ads_alert = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_alert"]
}

db_ads_alert = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_alert"]
} 

db_ads_alert_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.email_subscription_admins' need to be exist. Its missing from the resource. Please set the value to 'true' after property addition." {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_alert"]
} else = "Sending Alert to the to subscription administrators is currently not enabled in Azure SQL Server advanced data security" {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_alert"]
}

db_ads_alert_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-026",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should send alerts to subscription administrators",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL Servers that are not enabled with ADS. As a best practice, enable ADS so that the administratorsâ€”service and co-administratorâ€”can receive email alerts when anomalous activities are detected on the SQL Servers.",
    "Resource Type": "azurerm_mssql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}

#
# PR-AZR-TRF-SQL-022
#

default db_ads_scan = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["db_ads_scan"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["db_ads_scan"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["db_ads_scan"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_issue["db_ads_scan"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              ri.properties.recurring_scans[_].enabled == true;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              ri.properties.recurring_scans[_].enabled == true;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["db_ads_scan"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     recurring_scans.enabled != true
# }

db_ads_scan {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    not azure_attribute_absence["db_ads_scan"]
    not azure_issue["db_ads_scan"]
}

db_ads_scan = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_scan"]
}

db_ads_scan = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_scan"]
} 

db_ads_scan_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.enabled' need to be exist. Its missing from the resource. Please set the value to 'true' after property addition." {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["db_ads_scan"]
} else = "Azure SQL Server advanced data security recurring scans currently is not enabled" {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["db_ads_scan"]
}

db_ads_scan_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-022",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security recurring scans should be enabled",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
    "Resource Type": "azurerm_mssql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}


#
# PR-AZR-TRF-SQL-027
#

default sql_db_ads_scan = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["sql_db_ads_scan"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_scan"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["sql_db_ads_scan"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.recurring_scans
}

azure_issue["sql_db_ads_scan"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_sql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              ri.properties.recurring_scans[_].enabled == true;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              ri.properties.recurring_scans[_].enabled == true;
              ci := 1]) > 0;
              c := 1]) == 0
}

# azure_issue["sql_db_ads_scan"] {
#     resource := input.resources[_]
#     lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
#     recurring_scans := resource.properties.recurring_scans[_]
#     recurring_scans.enabled != true
# }

sql_db_ads_scan {
    lower(input.resources[_].type) == "azurerm_sql_server"
    not azure_attribute_absence["sql_db_ads_scan"]
    not azure_issue["sql_db_ads_scan"]
}

sql_db_ads_scan = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_scan"]
}

sql_db_ads_scan = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_scan"]
} 

sql_db_ads_scan_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'recurring_scans.enabled' need to be exist. Its missing from the resource. Please set the value to 'true' after property addition." {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_db_ads_scan"]
} else = "Azure SQL Server advanced data security recurring scans currently is not enabled" {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_db_ads_scan"]
}

sql_db_ads_scan_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-027",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security recurring scans should be enabled",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
    "Resource Type": "azurerm_sql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}



#
# PR-AZR-TRF-SQL-051
#

default mssql_ads_scan_configured = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["mssql_ads_scan_configured"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["mssql_ads_scan_configured"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["mssql_ads_scan_configured"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.storage_container_path
}

azure_issue["mssql_ads_scan_configured"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              count(ri.properties.storage_container_path) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              count(ri.properties.storage_container_path) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
}

mssql_ads_scan_configured {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    not azure_attribute_absence["mssql_ads_scan_configured"]
    not azure_issue["mssql_ads_scan_configured"]
}

mssql_ads_scan_configured = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["mssql_ads_scan_configured"]
}

mssql_ads_scan_configured = false {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["mssql_ads_scan_configured"]
} 

mssql_ads_scan_configured_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'storage_container_path' need to be exist. Its missing from the resource." {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_attribute_absence["mssql_ads_scan_configured"]
} else = "Azure SQL Server advanced data security currently is not enabled" {
    lower(input.resources[_].type) == "azurerm_mssql_server"
    azure_issue["mssql_ads_scan_configured"]
}

mssql_ads_scan_configured_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-051",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should be enabled",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
    "Resource Type": "azurerm_mssql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}


#
# PR-AZR-TRF-SQL-052
#

default sql_ads_scan_configured = null

# azurerm_mssql_server_vulnerability_assessment has direct dependecies with azurerm_mssql_server_security_alert_policy and it has dependecies with azurerm_mssql_server.
azure_attribute_absence["sql_ads_scan_configured"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_security_alert_policy"; c := 1]) == 0
}

azure_attribute_absence["sql_ads_scan_configured"] {
    count([c | input.resources[_].type == "azurerm_mssql_server_vulnerability_assessment"; c := 1]) == 0
}

azure_attribute_absence["sql_ads_scan_configured"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_mssql_server_vulnerability_assessment"
    not resource.properties.storage_container_path
}

azure_issue["sql_ads_scan_configured"] {
    resource := input.resources[_]
    lower(resource.type) == "azurerm_sql_server"
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, resource.properties.compiletime_identity);
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, r.properties.compiletime_identity);
              count(ri.properties.storage_container_path) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
    count([c | r := input.resources[_];
              r.type == "azurerm_mssql_server_security_alert_policy";
              contains(r.properties.server_name, concat(".", [resource.type, resource.name]));
              count([ci | ri := input.resources[_];
              ri.type == "azurerm_mssql_server_vulnerability_assessment";
              contains(ri.properties.server_security_alert_policy_id, concat(".", [r.type, r.name]));
              count(ri.properties.storage_container_path) > 0;
              ci := 1]) > 0;
              c := 1]) == 0
}

sql_ads_scan_configured {
    lower(input.resources[_].type) == "azurerm_sql_server"
    not azure_attribute_absence["sql_ads_scan_configured"]
    not azure_issue["sql_ads_scan_configured"]
}

sql_ads_scan_configured = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_ads_scan_configured"]
}

sql_ads_scan_configured = false {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_ads_scan_configured"]
} 

sql_ads_scan_configured_err = "azurerm_mssql_server_security_alert_policy and azurerm_mssql_server_vulnerability_assessment resource with property 'storage_container_path' need to be exist. Its missing from the resource." {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_attribute_absence["sql_ads_scan_configured"]
} else = "Azure SQL Server advanced data security currently is not enabled" {
    lower(input.resources[_].type) == "azurerm_sql_server"
    azure_issue["sql_ads_scan_configured"]
}

sql_ads_scan_configured_metadata := {
    "Policy Code": "PR-AZR-TRF-SQL-052",
    "Type": "IaC",
    "Product": "AZR",
    "Language": "Terraform",
    "Policy Title": "Azure SQL Server advanced data security should be enabled",
    "Policy Description": "Advanced data security (ADS) provides a set of advanced SQL security capabilities, including vulnerability assessment, threat detection, and data discovery and classification.<br><br>This policy identifies Azure SQL servers that do not have ADS enabled. As a best practice, enable ADS on mission-critical SQL servers.",
    "Resource Type": "azurerm_sql_server",
    "Policy Help URL": "",
    "Resource Help URL": "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_server_vulnerability_assessment"
}

